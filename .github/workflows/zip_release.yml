on:
  release:
    types: [published]

name: Upload Release Asset

env:
  DOTNET_ROOT: "/opt/dotnet/deploy"
  frontend-artifact: "/opt/artifacts/frontend.zip"
  backend-artifact: "/opt/artifacts/backend.zip"
  dotnet-version: 5.0.x
  node-version: 14.x

jobs:
  zip-backend:
    name: Upload Backend Asset
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: backend

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Get release
        id: get_release
        uses: bruceadams/get-release@v1.2.2
        env:
          GITHUB_TOKEN: ${{ github.token }}

      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{ env.node-version }}

      - name: Build with dotnet
        run: |
          dotnet build
          dotnet publish -c Release -o ${{ env.DOTNET_ROOT }}
          zip -R ${{ env.backend-artifact }} ${{ env.DOTNET_ROOT }}
        working-directory: backend/Web

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.get_release.outputs.upload_url }}
          asset_path: ${{ env.backend-artifact }}
          asset_name: backend.zip
          asset_content_type: application/zip
  zip-frontend:
    name: Upload Frontend Asset
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: frontend

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Get release
        id: get_release
        uses: bruceadams/get-release@v1.2.2
        env:
          GITHUB_TOKEN: ${{ github.token }}

      - name: Set up Node.js ${{ env.node-version }}
        uses: actions/setup-node@v2.1.4
        with:
          node-version: ${{ env.node-version }}

      - name: Build Frontend
        run: |
          npm ci
          npm run build --if-present
          zip -R ${{ env.frontend-artifact }} .

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.get_release.outputs.upload_url }}
          asset_path: ${{ env.frontend-artifact }}
          asset_name: frontend.zip
          asset_content_type: application/zip
